{"version":3,"sources":["components/cast/Cast.jsx","pages/Cast.jsx"],"names":["CastComp","cast","console","log","className","styles","castList","map","actor","castImg","src","profile_path","alt","name","active","castText","character","id","Cast","state","credits","this","props","match","params","movieId","API","then","setState","Component"],"mappings":"mQA2BeA,EAtBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElB,OADAC,QAAQC,IAAI,QAASF,GAEnB,mCACE,oBAAIG,UAAWC,IAAOC,SAAtB,SACGL,GACCA,EAAKM,KAAI,SAACC,GAAD,OACP,+BACE,qBACEJ,UAAWC,IAAOI,QAClBC,IAAG,UAZE,kCAYF,OAAoBF,EAAMG,cAC7BC,IAAKJ,EAAMK,OAEb,oBAAGT,UAAWC,IAAOS,OAArB,cAA+BN,EAAMK,QACrC,oBAAGT,UAAWC,IAAOU,SAArB,wBAA2CP,EAAMQ,eAP1CR,EAAMS,Y,QCNNC,E,4MACnBC,MAAQ,CACNC,QAAS,M,kEAGU,IAAD,OACZH,EAAgBI,KAAKC,MARKC,MAAMC,OAAOC,QAS7CC,IAAeT,GAAIU,MAAK,SAACP,GAAD,OAAa,EAAKQ,SAAS,CAAER,iB,+BAG7C,IACAA,EAAYC,KAAKF,MAAjBC,QAER,OACE,mCACE,cAAC,EAAD,eAAcA,U,GAfYS","file":"static/js/Cast.aaf7220b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"../cast/cast.module.css\";\r\n\r\nconst baseURLImage = \"https://image.tmdb.org/t/p/w92\";\r\n\r\nconst CastComp = ({ cast }) => {\r\n  console.log(\"cast:\", cast);\r\n  return (\r\n    <>\r\n      <ul className={styles.castList}>\r\n        {cast &&\r\n          cast.map((actor) => (\r\n            <li key={actor.id}>\r\n              <img\r\n                className={styles.castImg}\r\n                src={`${baseURLImage}${actor.profile_path}`}\r\n                alt={actor.name}\r\n              ></img>\r\n              <p className={styles.active}> {actor.name}</p>\r\n              <p className={styles.castText}>Character: {actor.character}</p>\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CastComp;\r\n","import React, { Component } from \"react\";\r\nimport CastComp from \"../components/cast/Cast\";\r\nimport * as API from \"../service/API\";\r\n\r\nconst getIdProps = (props) => props.match.params.movieId;\r\n\r\nexport default class Cast extends Component {\r\n  state = {\r\n    credits: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const id = getIdProps(this.props);\r\n    API.getCredits(id).then((credits) => this.setState({ credits }));\r\n  }\r\n\r\n  render() {\r\n    const { credits } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CastComp {...credits} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}